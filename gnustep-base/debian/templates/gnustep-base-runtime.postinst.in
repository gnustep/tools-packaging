#! /bin/sh
# postinst script for gnustep-base
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

setup_config()
{
    f=/etc/GNUstep/gdomap_probes
    if [ ! -f $f ]; then
      if [ ! -d /etc/GNUstep ]; then mkdir /etc/GNUstep; fi
      cat > $f <<EOF
# Addresses to probe for GNUstep name service.
# If this file does not contain any valid addresses, the local networks
# are probed.
EOF
      for ip in `hostname -i`; do
        echo $ip >> $f
      done
    fi
}

case "$1" in
    configure)
	setup_config

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

#DEBHELPER#

exit 0
